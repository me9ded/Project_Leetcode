class Solution:
    def reverseKGroup(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        count=0
        cur=head
        while cur and count<k:
            cur=cur.next
            count+=1
        if count<k:
            return head
        prev,cur=None,head
        for i in range(k):
            nxt=cur.next
            cur.next=prev
            prev=cur
            cur=nxt
        head.next=self.reverseKGroup(cur,k)
        return prev